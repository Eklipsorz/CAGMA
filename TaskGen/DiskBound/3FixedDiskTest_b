#!/bin/bash 


memUTarget=125
wpoint="accDisk"
# expected value  ->  actual value
# 	40 	  -> 	   60
# 	50 	  -> 	   70
# 	60 	  ->       80
# 	70 	  -> 	   90
# 	80 	  -> 	  100 
#      100 	  -> 	  120
#      120     	  ->      140
#      140        ->      150
# The actual constrain needs to be smaller than expected constrain.
# Because the system always doesn't react to changes of memU in time
nrround=5
expTime=720
nrlevel=5
enable_test_CAGMA=0
export LD_LIBRARY_PATH=/usr/lib

#begin=`date +%s`
#diff=0
#
#    Initialization
#test -e memU && rm -f memU 
#test -e etime && rm -f etime

#./genPattern 0 80 10 >> memU  		# output memUsage pattern
#./genPattern 1 0.1 0.05 >> etime 	# output Execution Time pattern
iter=0


trap trapContrC INT
function trapContrC(){
	

	for id in $(pidof $wpoint)
	do
		kill -9 $id
	done

	sarpid=$(pidof sar)
	#iostatpid=$(pidof iostat)
	#vmstatpid=$(pidof vmstat)
	#getMEMUpid=$(pidof -x "getMEMU_MEM")
	
	kill -9 $sarpid
	#kill -9 $iostatpid
	#kill -9 $vmstatpid
	#kill -9 $getMEMUpid
	rmmod DiskNotifier.ko
	rmmod supCenter.ko
	rmmod resetCMA.ko
	exit	
}

function killWpoint(){

	for id in $(pidof $wpoint)
	do
		kill -9 $id
	done

}

function killMain(){
	

	killWpoint

	sarpid=$(pidof sar)
	#iostatpid=$(pidof iostat)
	#vmstatpid=$(pidof vmstat)
	#getMEMUpid=$(pidof -x "getMEMU_MEM")
	
	kill -9 $sarpid
	#kill -9 $iostatpid
	#kill -9 $vmstatpid
	#kill -9 $getMEMUpid
}
function getNRmainProg(){
	
	NRmainProg=0
	
	for i in $(pidof FixedAccMem)
	do
		NRmainProg=$((NRmainProg+1))	
	done 
}

function obtainCurmemU(){

	curFree=`cat /proc/meminfo | awk '$1=="MemFree:"{print $2}'`
	curTotal=`cat /proc/meminfo | awk '$1=="MemTotal:"{print $2}'`
	curSwapFree=`cat /proc/meminfo | awk '$1=="SwapFree:"{print $2}'`
	curSwapTotal=`cat /proc/meminfo | awk '$1=="SwapTotal:"{print $2}'`
	curSwapUsage=$(($curSwapTotal-$curSwapFree))
	curUsage=$(($curTotal-$curFree+$curSwapUsage))
	curmemU=$(($curUsage*100/$curTotal))
	memUdiff=$(($memUTarget-$curmemU))

}

function calc() { awk "BEGIN{print $*}"; }     # set float arithmetic function
echo "begin"
#
#
#: ' 
#function begin()
#{
#
nrtask=15
tempsum=0
count=0
function initMain(){
	#sar MEM_IOPS
	sar -b -t 3 240 >> ./result/DISK_IOPS.$1 & 
	swapoff -a
	swapon -a
	echo 3 > /proc/sys/vm/drop_caches
	#iostat -x 6 160 >> ../output/MEM_RPS.$1 &
	#vmstat 6 160 >> ../output/MEM_memUsage.$1 &
	#../Tools/getMEMU_MEM 960 $1 &	
}

function wait_for_(){	

	ret=1
	echo "I send a packet to controller"
	while [ "$ret" == "1" ]
	do
		echo hi | nc 203.64.125.101 2393
		ret=`echo $?`	
	done
	
	while [ "$ret" != "hi" ]
	do	
		ret=$(nc -l 2390)
	done
	echo "VM3: i received a packet, ans=$ret" 
}

function wait_for_testing_CMA(){	

	ret=1
	echo "I send a packet to controller"
	while [ "$ret" == "1" ]
	do
		echo hi | nc 203.64.125.101 2396
		ret=`echo $?`	
	done
	nc -l 2390 && echo "VM3: i received a packet for CAGMA"
	echo "I have finished sending"
}
function warmup(){

	
	NRmainProg=`pgrep accDisk | wc -l`
	while [ "$NRmainProg" -lt "$nrtask" ]; 
	do
		./accDisk &
		NRmainProg=`pgrep accDisk | wc -l`
	done

	wait_for_
}

function begin_to_exper(){

	initMain $1

	warmup	
	
	warmup_is_done=0
#	expTime=80
#	for i in $(seq 1 9)
#	do
	
#		begin=`date +%s`
#		diff=0
#		tempsum=0
#		count=1
		
#		echo "enter $i/9"
#		while [ "$diff" -le "$expTime" ]
#		do
			
#			NRmainProg=`pgrep accDisk | wc -l`
			
#			if [ "$NRmainProg" -lt "$nrtask" ]; then
#				./accDisk &
#			elif [ "$warmup_is_done" -eq "0" ] && [ "$NRmainProg" -eq "$nrtask" ]; then
#				echo "is_done"
#				warmup_is_done=1
#				./GameGate $1
#			fi


#			end=`date +%s`
#			diff=$((end-begin))

#		done
#	done
}

for i in $(seq 1 5)
do
	if [ "$enable_test_CAGMA" -eq "1" ]; then
		insmod ../Tools/resetCMA/resetCMA.ko 
		rmmod resetCMA.ko
		echo "reset CMA.........done"
		insmod /root/LMAProj2016/supCenter/supCenter.ko 
		echo "install supCenter.........done"
	fi
	
	insmod ./monitor/DiskNotifier.ko	
	sleep 1
	echo "$i"
	begin_to_exper $i

#	sleep 10

	NRmainProg=`pgrep accDisk | wc -l`
	while [ "$NRmainProg" -gt "0" ]; 	
	do
		killWpoint
		NRmainProg=`pgrep accDisk | wc -l`
	done

	rmmod DiskNotifier.ko
		
#
	if [ "$enable_test_CAGMA" -eq "1" ]; then
		
		rmmod supCenter.ko
		echo "uninstall supCenter.........done"
	
		wait_for_testing_CMA
		echo "I'm ready to test next CAGMA"
	else
		wait_for_
	fi

done

killMain
	

