#!/bin/bash 
# This program can simulate that multiple disk-bound tasks and a memory-bound task 
# running on this platform via running two types of programs, called FixedAccDisk
# and FixedAccMem. Their execution time and memory usage are controlled and the 
# program change. The total memory usage of each round for obtaining results on 
# different memory usages

echo "Simulation: initialize library and some variables"

# set main program, which is used to simulate different memory usages 
wpoint="FixedAccDisk"

# enable or disable CAGMA run in Xen environment 
enable_test_CAGMA=0
export LD_LIBRARY_PATH=/usr/lib

# set the number of tasks running at the same time 
nrtask=15

# clear dirty pages for adding usable memory space
echo 3 > /proc/sys/vm/drop_caches

# set a callback function of a trap, which is only triggered by CTRL-C
# when a user press CTRL-C , then the system automatically stops the execution
# of each main program, stops the execution of the tools for collecting IOPS
# and remove necessary modules from the guest OS
trap trapContrC INT
function trapContrC(){
	
	# stop the execution of each main programs
	for id in $(pidof $wpoint)
	do
		kill -9 $id
	done

	# stop the execution of the tools for collecting IOPS 
	sarpid=$(pidof sar)	
	kill -9 $sarpid

	# stop the execution of a memory-boudn task 
	mempid=$(pidof FixedAccMem)
	kill -9 $mempid

	# remove some modules
	rmmod supCenter.ko
	rmmod resetCMA.ko
	rmmod DiskNotifier.ko
	exit	
}

function killWpoint(){

	for id in $(pidof $wpoint)
	do
		kill -9 $id
	done

}

function killMain(){
	

	killWpoint

	sarpid=$(pidof sar)
	kill -9 $sarpid
}
function getNRmainProg(){
	
	NRmainProg=0
	
	for i in $(pidof FixedAccMem)
	do
		NRmainProg=$((NRmainProg+1))	
	done 
}


echo "begin"


function initMain(){
	
	swapoff -a
	swapon -a
}

function wait_for_(){	

	ret=1
	echo "I send a packet to controller"
	while [ "$ret" == "1" ]
	do
		echo hi | nc 203.64.125.101 2393
		ret=`echo $?`	
	done
	
	while [ "$ret" != "hi" ]
	do	
		ret=$(nc -l 2390)
	done
	echo "VM3: i received a packet, ans=$ret" 
}

function wait_for_testing_CMA(){	

	ret=1
	echo "I send a packet to controller"
	while [ "$ret" == "1" ]
	do
		echo hi | nc 203.64.125.101 2396
		ret=`echo $?`	
	done
	
	while [ "$ret" != "hi" ]
	do	
		ret=$(nc -l 2390)
	done
	echo "VM3: i received a packet for CMA, ans: $ret"
}
function warmup(){
	
	for i in $(seq 1 $nrtask)
	do
		./$wpoint &
	done
	./FixedAccMem &
	wait_for_
}

function begin_to_exper(){


	warmup	
	
	initMain
	
	expTime=60
	sar -b -t 3 110 >> ./result/DISK_IOPS.$1 & 
	./GameGate $1
	
	for i in $(seq 1 6)
	do
		echo "enter $i/6, ans = $nrtask"

		begin=`date +%s`
		diff=0
		
		while [ "$diff" -le "$expTime" ]
		do
			end=`date +%s`
			diff=$((end-begin))
		done
	done
}


for i in $(seq 1 20)
do
	if [ "$enable_test_CAGMA" -eq "1" ]; then
		insmod ../Tools/resetCMA/resetCMA.ko 
		rmmod resetCMA.ko
		echo "reset CMA.........done"
		insmod /root/LMAProj2016/supCenter/supCenter.ko 
		echo "install supCenter.........done"
	fi
	
	sleep 1
	echo "$i"
	insmod ./monitor/DiskNotifier.ko
	begin_to_exper $i


	NRmainProg=`pgrep accDisk | wc -l`
	while [ "$NRmainProg" -gt "0" ]; 	
	do
		killWpoint
		NRmainProg=`pgrep accDisk | wc -l`
	done
	
	sarpid=$(pidof sar)
	kill -9 $sarpid
	mempid=$(pidof FixedAccMem)
	kill -9 $mempid

	echo "waitfor iops"
	sleep 10	
	echo "waitfor iops......done"
	
	rmmod DiskNotifier.ko
	
		
#
	if [ "$enable_test_CAGMA" -eq "1" ]; then
		
		rmmod supCenter.ko
		echo "uninstall supCenter.........done"
	
		wait_for_testing_CMA
		echo "I'm ready to test next CAGMA"
	else
		wait_for_
	fi
#
done

killMain
	

