#!/bin/bash 


memUTarget=125
wpoint="accMem"
# expected value  ->  actual value
# 	40 	  -> 	   60
# 	50 	  -> 	   70
# 	60 	  ->       80
# 	70 	  -> 	   90
# 	80 	  -> 	  100 
#      100 	  -> 	  120
#      120     	  ->      140
#      140        ->      150
# The actual constrain needs to be smaller than expected constrain.
# Because the system always doesn't react to changes of memU in time
nrround=5
expTime=10
nrlevel=5
export LD_LIBRARY_PATH=/usr/lib
swapoff -a
swapon -a
echo 3 > /proc/sys/vm/drop_caches

#begin=`date +%s`
#diff=0
#
#    Initialization
#test -e memU && rm -f memU 
#test -e etime && rm -f etime

#./genPattern 0 80 10 >> memU  		# output memUsage pattern
#./genPattern 1 0.1 0.05 >> etime 	# output Execution Time pattern
iter=0
echo hi

arr[1]=1536000
arr[2]=262144
arr[3]=445644
arr[4]=524288
arr[5]=445644
#arr[5]=262144

trap trapContrC INT
function trapContrC(){
	for id in `pidof $wpoint`
	do
		kill $id
	done
	exit
}

function obtainCurmemU(){

	curFree=`cat /proc/meminfo | awk '$1=="MemFree:"{print $2}'`
	curTotal=`cat /proc/meminfo | awk '$1=="MemTotal:"{print $2}'`
	curSwapFree=`cat /proc/meminfo | awk '$1=="SwapFree:"{print $2}'`
	curSwapTotal=`cat /proc/meminfo | awk '$1=="SwapTotal:"{print $2}'`
	curSwapUsage=$(($curSwapTotal-$curSwapFree))
	curUsage=$(($curTotal-$curFree+$curSwapUsage))
	curmemU=$(($curUsage*100/$curTotal))
	memUdiff=$(($memUTarget-$curmemU))

}

function calc() { awk "BEGIN{print $*}"; }     # set float arithmetic function
echo "begin"
#
#
#: ' 
#function begin()
#{
tempsum=0
count=0
function begin_to_exper(){


	#sar -b -t 3 240 >> iops.$i & 
	for i in $(seq 1 1)
	do
		#echo ${arr[$i]} memUTarget	
		begin=`date +%s`
		diff=0
		while [ "$diff" -le "$expTime" ]
		do
			obtainCurmemU
#			tempsum=$((curmemU+tempsum))
#			count=$((count +1 ))
#			echo $tempsum $count
			while [ "$curUsage" -lt "${arr[$i]}" ]
		#	while [ "$curmemU" -lt "$memUTarget" ]
			do
				obtainCurmemU
			
#				echo "$curUsage ${arr[$i]}"
				if [ "$curUsage" -lt "${arr[$i]}" ]; then
					./$wpoint &
				fi
			done

			end=`date +%s`
			diff=$((end-begin))

		done
		#memUTarget ="${arr[$i]}"
		#echo $memUTarget
	done	

}

for i in $(seq 1 1)
do
	begin_to_exper $i
done

for id in `pidof $wpoint`
do
	kill $id
done
